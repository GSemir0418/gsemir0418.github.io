<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>css on Even - A super concise theme for Hugo</title>
    <link>https://gsemir0418.github.io/tags/css/</link>
    <description>Recent content in css on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 14 Mar 2022 08:40:24 +0800</lastBuildDate><atom:link href="https://gsemir0418.github.io/tags/css/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>伪类和伪元素</title>
      <link>https://gsemir0418.github.io/post/%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0/</link>
      <pubDate>Mon, 14 Mar 2022 08:40:24 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0/</guid>
      <description>1 伪类和伪元素 伪元素在CSS3之前就已经存在，只是没有伪元素的说法，都是归纳为伪类，所有很多人分不清楚伪类和伪元素。比如常用的:before</description>
    </item>
    
    <item>
      <title>前端面试CSS</title>
      <link>https://gsemir0418.github.io/post/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95css/</link>
      <pubDate>Mon, 07 Mar 2022 09:57:22 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95css/</guid>
      <description>1 BFC是什么 是什么：块级格式化上下文，通俗地讲就是“被隔离的区间”，BFC元素的子元素不会对外面的其他元素产生影响 怎么做： 触发条件： 浮动元</description>
    </item>
    
    <item>
      <title>BFC</title>
      <link>https://gsemir0418.github.io/post/bfc/</link>
      <pubDate>Wed, 10 Nov 2021 19:45:19 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/bfc/</guid>
      <description>1 BFC 1.1 BFC是什么 常见定位方案 普通流：元素按照其在HTML中的先后位置至上而下布局，行内元素由左至右排列，占满一行后换行，块级元素占满整行。</description>
    </item>
    
    <item>
      <title>CSS布局</title>
      <link>https://gsemir0418.github.io/post/css%E5%B8%83%E5%B1%80/</link>
      <pubDate>Wed, 20 Oct 2021 14:36:05 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/css%E5%B8%83%E5%B1%80/</guid>
      <description>1 flex弹性布局 Flex布局的目标是提供一种更有效的方式来布局、对齐和分配容器中子元素的空间，即使它们的大小是未知的或动态的。 flex布局</description>
    </item>
    
  </channel>
</rss>
