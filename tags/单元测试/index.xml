<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>单元测试 on GSemir Blog</title>
    <link>https://gsemir0418.github.io/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link>
    <description>Recent content in 单元测试 on GSemir Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Jun 2021 08:43:55 +0800</lastBuildDate><atom:link href="https://gsemir0418.github.io/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>单元测试之文件模块</title>
      <link>https://gsemir0418.github.io/posts/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E4%B9%8B%E6%96%87%E4%BB%B6%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Tue, 29 Jun 2021 08:43:55 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/posts/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E4%B9%8B%E6%96%87%E4%BB%B6%E6%A8%A1%E5%9D%97/</guid>
      <description>安装jest
yarn add -dev jest 在package.json中添加test命令
&amp;#34;scripts&amp;#34;:{ &amp;#34;test&amp;#34;:&amp;#34;jest&amp;#34; } 新建__tests__文件夹，单元测试文件一般命名为xx.unit.js或者xx.spec.js，下面是测试示例，测试db中的read和write是否为方法：
const db = require(&amp;#39;../db.js&amp;#39;) describe(&amp;#39;db&amp;#39;, () =&amp;gt; { it(&amp;#39;read is a function&amp;#39;, () =&amp;gt; { expect(db.read instanceof Function).toBe(true) }) it(&amp;#39;write is a function&amp;#39;, () =&amp;gt; { expect(db.write instanceof Function).toBe(true) }) }) 运行
yarn test 一般单元测试为白盒测试，知道代码是怎么编写的
单元测试不应该与外界打交道，不能操作硬盘、网络等
单元测试的对象是函数
功能测试的对象是模块
集成测试的对象是系统
在__test__同级目录下创建__mocks__，新建fs.js，在test文件开头就要写
jest.mock(&#39;&#39;) 未完待续。。。 </description>
    </item>
    
  </channel>
</rss>
