<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on Even - A super concise theme for Hugo</title>
    <link>https://gsemir0418.github.io/tags/react/</link>
    <description>Recent content in React on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 23 Oct 2021 20:38:48 +0800</lastBuildDate><atom:link href="https://gsemir0418.github.io/tags/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nextjs全解</title>
      <link>https://gsemir0418.github.io/post/nextjs%E5%85%A8%E8%A7%A3/</link>
      <pubDate>Sat, 23 Oct 2021 20:38:48 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/nextjs%E5%85%A8%E8%A7%A3/</guid>
      <description>0 准备 0.1 创建项目 利用yarn或npm创建 1 2 3 yarn create next-app // 或 npx create-next-app@latest 使用typescript： 1 yarn create next-app --typescript 根据提示输入文件名后，输入yarn dev启动</description>
    </item>
    
    <item>
      <title>Dva数据流</title>
      <link>https://gsemir0418.github.io/post/dva%E6%95%B0%E6%8D%AE%E6%B5%81/</link>
      <pubDate>Wed, 15 Sep 2021 16:12:05 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/dva%E6%95%B0%E6%8D%AE%E6%B5%81/</guid>
      <description>1 初识Dva 1.1 定义 dva 首先是一个基于redux和redux-saga的数据流方案，然后为了简化开发体验，dva 还额外内置了react-rout</description>
    </item>
    
    <item>
      <title>umi&#43;AntdPro实战总结</title>
      <link>https://gsemir0418.github.io/post/antdpro&#43;umi%E5%AE%9E%E6%88%98/</link>
      <pubDate>Sun, 22 Aug 2021 22:51:51 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/antdpro&#43;umi%E5%AE%9E%E6%88%98/</guid>
      <description>项目主体开发临近尾声，顺利进入了测试阶段。为期三个月的开发期间，使我对react，特别是hooks的理解以及umi框架的理解大大提升。在此将</description>
    </item>
    
    <item>
      <title>UseState原理</title>
      <link>https://gsemir0418.github.io/post/usestate%E5%8E%9F%E7%90%86/</link>
      <pubDate>Sat, 07 Aug 2021 22:15:51 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/usestate%E5%8E%9F%E7%90%86/</guid>
      <description>1 useState简单实现 1.1 示例 点击按钮，结果+1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import React from &amp;#34;react&amp;#34;; import ReactDOM from &amp;#34;react-dom&amp;#34;; const rootElement = document.getElementById(&amp;#34;root&amp;#34;); function App() { const [n, setN] = React.useState(0); return ( &amp;lt;div className=&amp;#34;App&amp;#34;&amp;gt; &amp;lt;p&amp;gt;{n}&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; &amp;lt;button onClick={()</description>
    </item>
    
    <item>
      <title>Umi-Request配置</title>
      <link>https://gsemir0418.github.io/post/umi-request%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 09 Jul 2021 16:47:33 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/umi-request%E9%85%8D%E7%BD%AE/</guid>
      <description>utils/request.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 /** Request 网络请求工具 更详细的 api 文档: https://github.com/umijs/umi-request</description>
    </item>
    
    <item>
      <title>React入门</title>
      <link>https://gsemir0418.github.io/post/react%E5%85%A5%E9%97%A8/</link>
      <pubDate>Fri, 25 Jun 2021 23:11:51 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/react%E5%85%A5%E9%97%A8/</guid>
      <description>1.React是什么 用于构建用户界面的JS库（操作DOM呈现页面） 是一个将数据渲染为HTML视图的开源的JavaScript库 官网：http</description>
    </item>
    
    <item>
      <title>初识Hooks</title>
      <link>https://gsemir0418.github.io/post/reacthooks/</link>
      <pubDate>Fri, 25 Jun 2021 23:07:51 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/reacthooks/</guid>
      <description>1 Hook简介 1.1 基本概念 Hook 是 React 16.8 的新增特性。它可以让你在不编写 class 的情况下使⽤ state 以及其他的 React 特性。 1.2 React Hooks优势 函数组件不能使⽤state</description>
    </item>
    
    <item>
      <title>React组件生命周期</title>
      <link>https://gsemir0418.github.io/post/react%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</link>
      <pubDate>Fri, 25 Jun 2021 11:09:51 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/react%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid>
      <description>1 生命周期的理解 1.1 引出生命周期 需求： 让指定的文本做显示* */* 隐藏的渐变动画 从完全可见，到彻底消失，耗时2S 点击“不活了”按钮从界面中卸载组件 源</description>
    </item>
    
    <item>
      <title>React Hooks全解</title>
      <link>https://gsemir0418.github.io/post/%E6%96%B9%E6%96%B9%E7%9A%84hooks/</link>
      <pubDate>Tue, 01 Jun 2021 17:02:51 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/%E6%96%B9%E6%96%B9%E7%9A%84hooks/</guid>
      <description>1.useState 使用状态 1 2 3 const [n, setN] = React.useState(0) const [user, setUser] = React.useState({name:&amp;#39;F&amp;#39;}) 注意事项1：不可局部更新 1 2 3 4 5 const [user, setUser] = useState({name:&amp;#39;Jack&amp;#39;,age:18}) setState({ name:&amp;#39;Sam&amp;#39; }) 结果得到的是{name:&amp;lsquo;Sam&amp;rsqu</description>
    </item>
    
    <item>
      <title>可视化大屏技术</title>
      <link>https://gsemir0418.github.io/post/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Fri, 28 May 2021 09:30:55 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E6%8A%80%E6%9C%AF/</guid>
      <description>1 背景和意义 数据可视化即把相对复杂、抽象的数据通过可视化的方式以人们更易理解的形式展示出来的一系列手段，旨在更形象地表达数据内在的信息和规律</description>
    </item>
    
    <item>
      <title>React基础</title>
      <link>https://gsemir0418.github.io/post/react%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Thu, 29 Apr 2021 23:11:51 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/react%E5%9F%BA%E7%A1%80/</guid>
      <description>1 React定义组件 1.1 函数式组件 函数式组件适用于简单组件的定义，其首字母需大写，且虚拟DOM元素必须有结束标签 函数组件中的this指向为wi</description>
    </item>
    
  </channel>
</rss>
