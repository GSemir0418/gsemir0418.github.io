<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JS手写 on Even - A super concise theme for Hugo</title>
    <link>https://gsemir0418.github.io/tags/js%E6%89%8B%E5%86%99/</link>
    <description>Recent content in JS手写 on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 29 Mar 2022 09:58:50 +0800</lastBuildDate><atom:link href="https://gsemir0418.github.io/tags/js%E6%89%8B%E5%86%99/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>手写发布订阅</title>
      <link>https://gsemir0418.github.io/post/%E6%89%8B%E5%86%99%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/</link>
      <pubDate>Tue, 29 Mar 2022 09:58:50 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/%E6%89%8B%E5%86%99%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/</guid>
      <description>发布订阅是一种设计模式，所谓设计模式就是写代码的套路 发布订阅模式主要包含三个API，分别是on、emit/trigger、off 1 2 3 4 5 6</description>
    </item>
    
    <item>
      <title>手写AJAX</title>
      <link>https://gsemir0418.github.io/post/%E6%89%8B%E5%86%99ajax/</link>
      <pubDate>Tue, 29 Mar 2022 09:19:07 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/%E6%89%8B%E5%86%99ajax/</guid>
      <description>1 创建对象 1 var xhr = new XMLHttpRequest() 2 写url 1 xhr.open(&amp;#39;GET&amp;#39;, &amp;#39;/xxx&amp;#39;) 3 监听onreadystatechange事件 xhr对象的readyState属性取值包括0~4，0表</description>
    </item>
    
    <item>
      <title>手写数组去重</title>
      <link>https://gsemir0418.github.io/post/%E6%89%8B%E5%86%99%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/</link>
      <pubDate>Mon, 28 Mar 2022 17:46:37 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/%E6%89%8B%E5%86%99%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/</guid>
      <description>1 Set 1 2 3 const uniq = (arr) =&amp;gt; Array.from(new Set(arr)) // or const uniq = (arr) =&amp;gt; [...new Set(arr)] 2 计数排序 1 2 3 4 5 6 7 8 9 10 11 const uniq = (arr) =&amp;gt; { if(!arr.length) return [] const map = {} for(let i = 0; i &amp;lt;= arr.length; i++) { if(!arr[i] || map[arr[i]]) continue // 利用对象中k</description>
    </item>
    
    <item>
      <title>手写防抖与节流</title>
      <link>https://gsemir0418.github.io/post/%E6%89%8B%E5%86%99%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81/</link>
      <pubDate>Mon, 28 Mar 2022 10:48:18 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/%E6%89%8B%E5%86%99%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81/</guid>
      <description>0 区别与联系 相同：在不影响客户体验的前提下，将频繁的回调函数，进行次数缩减，避免大量计算导致的页面卡顿 不同：防抖是将多次执行变为最后一次执行</description>
    </item>
    
    <item>
      <title>手写Promise</title>
      <link>https://gsemir0418.github.io/post/%E6%89%8B%E5%86%99promise/</link>
      <pubDate>Tue, 14 Dec 2021 09:59:48 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/%E6%89%8B%E5%86%99promise/</guid>
      <description>0 手写前 该技术解决什么问题-why 回调地狱，比如node读写文件 该技术是怎么解决它的-how Promise的构造函数接收一个参数：函数，并且</description>
    </item>
    
    <item>
      <title>手写深拷贝</title>
      <link>https://gsemir0418.github.io/post/%E6%89%8B%E5%86%99%E6%B7%B1%E6%8B%B7%E8%B4%9D/</link>
      <pubDate>Tue, 23 Nov 2021 16:15:44 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/%E6%89%8B%E5%86%99%E6%B7%B1%E6%8B%B7%E8%B4%9D/</guid>
      <description>1 什么是深拷贝 b是a的一份拷贝，b中没有对a中对象的引用 2 JSON序列化与反序列化 最简单，但存在如下缺点 不支持函数，会直接忽略函数属性 不支持</description>
    </item>
    
  </channel>
</rss>
