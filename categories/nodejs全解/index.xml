<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nodejs全解 on Even - A super concise theme for Hugo</title>
    <link>https://gsemir0418.github.io/categories/nodejs%E5%85%A8%E8%A7%A3/</link>
    <description>Recent content in Nodejs全解 on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 06 Aug 2021 17:33:55 +0800</lastBuildDate><atom:link href="https://gsemir0418.github.io/categories/nodejs%E5%85%A8%E8%A7%A3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Node进程与线程</title>
      <link>https://gsemir0418.github.io/post/node%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Fri, 06 Aug 2021 17:33:55 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/node%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/</guid>
      <description>1 进程 1.1 进程 Process 场景 notepad.exe是一个程序，不是进程 双击notepad.exe时，操作系统会开启一个进程 定义 进程是程序的执行实例 程序</description>
    </item>
    
    <item>
      <title>Node技术架构</title>
      <link>https://gsemir0418.github.io/post/node%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Thu, 29 Jul 2021 20:54:55 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/node%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84/</guid>
      <description>1 Node.js概述 1.1 Node.js不是什么 不是web框架（Flask，Spring） 不是编程语言（Python，PHP） 1.2 Node.js是</description>
    </item>
    
    <item>
      <title>NodeStream模块</title>
      <link>https://gsemir0418.github.io/post/nodejsstream%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Thu, 08 Jul 2021 14:07:04 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/nodejsstream%E6%A8%A1%E5%9D%97/</guid>
      <description>1.三个示例引入Stream 1.1 创建流 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // 引入fs模块 const fs = require(&amp;#39;fs&amp;#39;) // 利用fs创建流 const stream = fs.createWriteStream(&amp;#39;./big_file.txt&amp;#39;) // 写数据 for (let i = 0; i &amp;lt; 100000; i++) {</description>
    </item>
    
    <item>
      <title>数据库基础</title>
      <link>https://gsemir0418.github.io/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 05 Jul 2021 08:57:20 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/</guid>
      <description>1 第一二三范式 1 第一范式 1NF 定义：字段不可再分 举例：存储体检者的双眼视力，应分为左眼视力和右眼视力两个字段 即user表里应有left_eye和</description>
    </item>
    
    <item>
      <title>Sequelize ORM</title>
      <link>https://gsemir0418.github.io/post/sequelize.js/</link>
      <pubDate>Fri, 02 Jul 2021 11:01:55 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/sequelize.js/</guid>
      <description>1 MySQL数据类型 MySQL支持的数据类型比较少，主要有五种类型： 数字类型 字符串类型 时间和日期类型 JSON类型 其他特殊类型 id 可以指定类型为</description>
    </item>
    
    <item>
      <title>Node.js连接数据库</title>
      <link>https://gsemir0418.github.io/post/node.js%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Fri, 02 Jul 2021 09:24:55 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/node.js%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>1 安装mysql依赖包 1 yarn add mysql 2 创建mysql连接 创建连接前，确保容器是开启状态。新建test.js文件。 引入mysql模块 1 const mysql = require(&amp;#39;mysql&amp;#39;) 创建连</description>
    </item>
    
    <item>
      <title>Docker安装MySQL</title>
      <link>https://gsemir0418.github.io/post/docker%E5%AE%89%E8%A3%85mysql/</link>
      <pubDate>Fri, 02 Jul 2021 08:36:55 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/docker%E5%AE%89%E8%A3%85mysql/</guid>
      <description>1 win10安装Docker https://hub.docker.com/ 注册登录并下载安装Docker Desktop。 启用Hyper-V 右键Windows按钮并选择“应用和功能”，选</description>
    </item>
    
    <item>
      <title>NodeHTTP模块</title>
      <link>https://gsemir0418.github.io/post/nodehttp%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Wed, 30 Jun 2021 09:55:55 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/nodehttp%E6%A8%A1%E5%9D%97/</guid>
      <description>0 准备工作 1 ts-node-dev 当文件更新时自动重启node 避免每次改完代码都要重新运行的麻烦 可以用TS开发Node.js程序，且会自动重启 不宜在生产环境使用</description>
    </item>
    
    <item>
      <title>调试Nodejs</title>
      <link>https://gsemir0418.github.io/post/%E8%B0%83%E8%AF%95nodejs/</link>
      <pubDate>Wed, 30 Jun 2021 09:40:55 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/%E8%B0%83%E8%AF%95nodejs/</guid>
      <description>1 VSCode调试Node.js 在launch.json中添加配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 { // 使用 IntelliSense 了解相关属性。 // 悬停以查看现</description>
    </item>
    
    <item>
      <title>单元测试之文件模块</title>
      <link>https://gsemir0418.github.io/post/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E4%B9%8B%E6%96%87%E4%BB%B6%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Tue, 29 Jun 2021 08:43:55 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E4%B9%8B%E6%96%87%E4%BB%B6%E6%A8%A1%E5%9D%97/</guid>
      <description>安装jest 1 yarn add -dev jest 在package.json中添加test命令 1 2 3 &amp;#34;scripts&amp;#34;:{ &amp;#34;test&amp;#34;:&amp;#34;jest&amp;#34; } 新建__tests__文件夹，单元测试文件一般命名为xx.un</description>
    </item>
    
    <item>
      <title>Node文件模块</title>
      <link>https://gsemir0418.github.io/post/node%E6%96%87%E4%BB%B6%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Fri, 25 Jun 2021 14:40:55 +0800</pubDate>
      
      <guid>https://gsemir0418.github.io/post/node%E6%96%87%E4%BB%B6%E6%A8%A1%E5%9D%97/</guid>
      <description>1 待办事项命令行程序需求 功能： 可以列出所有的todo； 新增、编辑、删除todo； 修改todo状态为已完成/未完成 命令 1 2 3 t t add 任务名 t clear 2</description>
    </item>
    
  </channel>
</rss>
